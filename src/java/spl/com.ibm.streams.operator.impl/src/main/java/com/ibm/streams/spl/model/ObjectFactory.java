/*
 * Copyright 2021 IBM Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference
// Implementation,
// v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2017.05.17 at 12:19:00 PM EDT
//

package com.ibm.streams.spl.model;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;

/**
 * This object contains factory methods for each Java content interface and Java element interface
 * generated in the com.ibm.streams.spl.model package.
 *
 * <p>An ObjectFactory allows you to programatically construct new instances of the Java
 * representation for XML content. The Java representation of XML content can consist of schema
 * derived interfaces and classes representing the binding of schema type definitions, element
 * declarations and model groups. Factory methods for each of these are provided in this class.
 */
@XmlRegistry
public class ObjectFactory {

  private static final QName _Library_QNAME =
      new QName("http://www.ibm.com/xmlns/prod/streams/spl/common", "library");
  private static final QName _JavaOpLibrary_QNAME =
      new QName("http://www.ibm.com/xmlns/prod/streams/spl/common", "javaOpLibrary");
  private static final QName _OperatorInstanceModel_QNAME =
      new QName(
          "http://www.ibm.com/xmlns/prod/streams/spl/operator/instance", "operatorInstanceModel");
  private static final QName _LiteralTypeList_QNAME =
      new QName("http://www.ibm.com/xmlns/prod/streams/spl/operator/instance", "list");
  private static final QName _LiteralTypeExpn_QNAME =
      new QName("http://www.ibm.com/xmlns/prod/streams/spl/operator/instance", "expn");
  private static final QName _LiteralTypeTuple_QNAME =
      new QName("http://www.ibm.com/xmlns/prod/streams/spl/operator/instance", "tuple");
  private static final QName _LiteralTypeMap_QNAME =
      new QName("http://www.ibm.com/xmlns/prod/streams/spl/operator/instance", "map");
  private static final QName _LiteralTypeSet_QNAME =
      new QName("http://www.ibm.com/xmlns/prod/streams/spl/operator/instance", "set");

  /**
   * Create a new ObjectFactory that can be used to create new instances of schema derived classes
   * for package: com.ibm.streams.spl.model
   */
  public ObjectFactory() {}

  /** Create an instance of {@link OperatorInstanceModelType } */
  public OperatorInstanceModelType createOperatorInstanceModelType() {
    return new OperatorInstanceModelType();
  }

  /** Create an instance of {@link StreamHistoryType } */
  public StreamHistoryType createStreamHistoryType() {
    return new StreamHistoryType();
  }

  /** Create an instance of {@link InputPortsType } */
  public InputPortsType createInputPortsType() {
    return new InputPortsType();
  }

  /** Create an instance of {@link TupleType } */
  public TupleType createTupleType() {
    return new TupleType();
  }

  /** Create an instance of {@link OutputPortType } */
  public OutputPortType createOutputPortType() {
    return new OutputPortType();
  }

  /** Create an instance of {@link ToolkitType } */
  public ToolkitType createToolkitType() {
    return new ToolkitType();
  }

  /** Create an instance of {@link CallType } */
  public CallType createCallType() {
    return new CallType();
  }

  /** Create an instance of {@link SubscriptType } */
  public SubscriptType createSubscriptType() {
    return new SubscriptType();
  }

  /** Create an instance of {@link TypeEntryType } */
  public TypeEntryType createTypeEntryType() {
    return new TypeEntryType();
  }

  /** Create an instance of {@link SourceLocationType } */
  public SourceLocationType createSourceLocationType() {
    return new SourceLocationType();
  }

  /** Create an instance of {@link LiteralType } */
  public LiteralType createLiteralType() {
    return new LiteralType();
  }

  /** Create an instance of {@link StreamType } */
  public StreamType createStreamType() {
    return new StreamType();
  }

  /** Create an instance of {@link ToolkitsType } */
  public ToolkitsType createToolkitsType() {
    return new ToolkitsType();
  }

  /** Create an instance of {@link UnaryType } */
  public UnaryType createUnaryType() {
    return new UnaryType();
  }

  /** Create an instance of {@link ExpressionType } */
  public ExpressionType createExpressionType() {
    return new ExpressionType();
  }

  /** Create an instance of {@link OutputAttributeType } */
  public OutputAttributeType createOutputAttributeType() {
    return new OutputAttributeType();
  }

  /** Create an instance of {@link ValuesType } */
  public ValuesType createValuesType() {
    return new ValuesType();
  }

  /** Create an instance of {@link RuntimeConstantsType } */
  public RuntimeConstantsType createRuntimeConstantsType() {
    return new RuntimeConstantsType();
  }

  /** Create an instance of {@link SymbolType } */
  public SymbolType createSymbolType() {
    return new SymbolType();
  }

  /** Create an instance of {@link ArgsType } */
  public ArgsType createArgsType() {
    return new ArgsType();
  }

  /** Create an instance of {@link IncludesType } */
  public IncludesType createIncludesType() {
    return new IncludesType();
  }

  /** Create an instance of {@link PortType } */
  public PortType createPortType() {
    return new PortType();
  }

  /** Create an instance of {@link TupleElementType } */
  public TupleElementType createTupleElementType() {
    return new TupleElementType();
  }

  /** Create an instance of {@link OutputPortsType } */
  public OutputPortsType createOutputPortsType() {
    return new OutputPortsType();
  }

  /** Create an instance of {@link MapElementType } */
  public MapElementType createMapElementType() {
    return new MapElementType();
  }

  /** Create an instance of {@link InputPortType } */
  public InputPortType createInputPortType() {
    return new InputPortType();
  }

  /** Create an instance of {@link TypeTableType } */
  public TypeTableType createTypeTableType() {
    return new TypeTableType();
  }

  /** Create an instance of {@link EnumType } */
  public EnumType createEnumType() {
    return new EnumType();
  }

  /** Create an instance of {@link StateVariableType } */
  public StateVariableType createStateVariableType() {
    return new StateVariableType();
  }

  /** Create an instance of {@link PortScopeType } */
  public PortScopeType createPortScopeType() {
    return new PortScopeType();
  }

  /** Create an instance of {@link WindowType } */
  public WindowType createWindowType() {
    return new WindowType();
  }

  /** Create an instance of {@link AssignmentType } */
  public AssignmentType createAssignmentType() {
    return new AssignmentType();
  }

  /** Create an instance of {@link RuntimeConstantType } */
  public RuntimeConstantType createRuntimeConstantType() {
    return new RuntimeConstantType();
  }

  /** Create an instance of {@link ListOrSetType } */
  public ListOrSetType createListOrSetType() {
    return new ListOrSetType();
  }

  /** Create an instance of {@link ExpressionTreeType } */
  public ExpressionTreeType createExpressionTreeType() {
    return new ExpressionTreeType();
  }

  /** Create an instance of {@link StateVariablesType } */
  public StateVariablesType createStateVariablesType() {
    return new StateVariablesType();
  }

  /** Create an instance of {@link AttributeType } */
  public AttributeType createAttributeType() {
    return new AttributeType();
  }

  /** Create an instance of {@link ContextType } */
  public ContextType createContextType() {
    return new ContextType();
  }

  /** Create an instance of {@link ParametersType } */
  public ParametersType createParametersType() {
    return new ParametersType();
  }

  /** Create an instance of {@link BinaryType } */
  public BinaryType createBinaryType() {
    return new BinaryType();
  }

  /** Create an instance of {@link ParameterType } */
  public ParameterType createParameterType() {
    return new ParameterType();
  }

  /** Create an instance of {@link OutputAttributesType } */
  public OutputAttributesType createOutputAttributesType() {
    return new OutputAttributesType();
  }

  /** Create an instance of {@link AnnotationsType } */
  public AnnotationsType createAnnotationsType() {
    return new AnnotationsType();
  }

  /** Create an instance of {@link InputAttributeType } */
  public InputAttributeType createInputAttributeType() {
    return new InputAttributeType();
  }

  /** Create an instance of {@link PartitionEvictionType } */
  public PartitionEvictionType createPartitionEvictionType() {
    return new PartitionEvictionType();
  }

  /** Create an instance of {@link MapType } */
  public MapType createMapType() {
    return new MapType();
  }

  /** Create an instance of {@link ConditionalType } */
  public ConditionalType createConditionalType() {
    return new ConditionalType();
  }

  /** Create an instance of {@link ExpnBase } */
  public ExpnBase createExpnBase() {
    return new ExpnBase();
  }

  /** Create an instance of {@link WindowPolicyType } */
  public WindowPolicyType createWindowPolicyType() {
    return new WindowPolicyType();
  }

  /** Create an instance of {@link InputAttributesType } */
  public InputAttributesType createInputAttributesType() {
    return new InputAttributesType();
  }

  /** Create an instance of {@link LibraryType } */
  public LibraryType createLibraryType() {
    return new LibraryType();
  }

  /** Create an instance of {@link JavaOpLibraryType } */
  public JavaOpLibraryType createJavaOpLibraryType() {
    return new JavaOpLibraryType();
  }

  /** Create an instance of {@link JavaOpManagedLibraryType } */
  public JavaOpManagedLibraryType createJavaOpManagedLibraryType() {
    return new JavaOpManagedLibraryType();
  }

  /** Create an instance of {@link ToolkitDependencyType } */
  public ToolkitDependencyType createToolkitDependencyType() {
    return new ToolkitDependencyType();
  }

  /** Create an instance of {@link DescriptionType } */
  public DescriptionType createDescriptionType() {
    return new DescriptionType();
  }

  /** Create an instance of {@link ManagedLibraryType } */
  public ManagedLibraryType createManagedLibraryType() {
    return new ManagedLibraryType();
  }

  /** Create an instance of {@link UriType } */
  public UriType createUriType() {
    return new UriType();
  }

  /** Create an instance of {@link JAXBElement }{@code <}{@link LibraryType }{@code >}} */
  @XmlElementDecl(namespace = "http://www.ibm.com/xmlns/prod/streams/spl/common", name = "library")
  public JAXBElement<LibraryType> createLibrary(LibraryType value) {
    return new JAXBElement<LibraryType>(_Library_QNAME, LibraryType.class, null, value);
  }

  /** Create an instance of {@link JAXBElement }{@code <}{@link JavaOpLibraryType }{@code >}} */
  @XmlElementDecl(
      namespace = "http://www.ibm.com/xmlns/prod/streams/spl/common",
      name = "javaOpLibrary")
  public JAXBElement<JavaOpLibraryType> createJavaOpLibrary(JavaOpLibraryType value) {
    return new JAXBElement<JavaOpLibraryType>(
        _JavaOpLibrary_QNAME, JavaOpLibraryType.class, null, value);
  }

  /**
   * Create an instance of {@link JAXBElement }{@code <}{@link OperatorInstanceModelType }{@code >}}
   */
  @XmlElementDecl(
      namespace = "http://www.ibm.com/xmlns/prod/streams/spl/operator/instance",
      name = "operatorInstanceModel")
  public JAXBElement<OperatorInstanceModelType> createOperatorInstanceModel(
      OperatorInstanceModelType value) {
    return new JAXBElement<OperatorInstanceModelType>(
        _OperatorInstanceModel_QNAME, OperatorInstanceModelType.class, null, value);
  }

  /** Create an instance of {@link JAXBElement }{@code <}{@link ListOrSetType }{@code >}} */
  @XmlElementDecl(
      namespace = "http://www.ibm.com/xmlns/prod/streams/spl/operator/instance",
      name = "list",
      scope = LiteralType.class)
  public JAXBElement<ListOrSetType> createLiteralTypeList(ListOrSetType value) {
    return new JAXBElement<ListOrSetType>(
        _LiteralTypeList_QNAME, ListOrSetType.class, LiteralType.class, value);
  }

  /** Create an instance of {@link JAXBElement }{@code <}{@link ExpressionTreeType }{@code >}} */
  @XmlElementDecl(
      namespace = "http://www.ibm.com/xmlns/prod/streams/spl/operator/instance",
      name = "expn",
      scope = LiteralType.class)
  public JAXBElement<ExpressionTreeType> createLiteralTypeExpn(ExpressionTreeType value) {
    return new JAXBElement<ExpressionTreeType>(
        _LiteralTypeExpn_QNAME, ExpressionTreeType.class, LiteralType.class, value);
  }

  /** Create an instance of {@link JAXBElement }{@code <}{@link TupleType }{@code >}} */
  @XmlElementDecl(
      namespace = "http://www.ibm.com/xmlns/prod/streams/spl/operator/instance",
      name = "tuple",
      scope = LiteralType.class)
  public JAXBElement<TupleType> createLiteralTypeTuple(TupleType value) {
    return new JAXBElement<TupleType>(
        _LiteralTypeTuple_QNAME, TupleType.class, LiteralType.class, value);
  }

  /** Create an instance of {@link JAXBElement }{@code <}{@link MapType }{@code >}} */
  @XmlElementDecl(
      namespace = "http://www.ibm.com/xmlns/prod/streams/spl/operator/instance",
      name = "map",
      scope = LiteralType.class)
  public JAXBElement<MapType> createLiteralTypeMap(MapType value) {
    return new JAXBElement<MapType>(_LiteralTypeMap_QNAME, MapType.class, LiteralType.class, value);
  }

  /** Create an instance of {@link JAXBElement }{@code <}{@link ListOrSetType }{@code >}} */
  @XmlElementDecl(
      namespace = "http://www.ibm.com/xmlns/prod/streams/spl/operator/instance",
      name = "set",
      scope = LiteralType.class)
  public JAXBElement<ListOrSetType> createLiteralTypeSet(ListOrSetType value) {
    return new JAXBElement<ListOrSetType>(
        _LiteralTypeSet_QNAME, ListOrSetType.class, LiteralType.class, value);
  }
}
