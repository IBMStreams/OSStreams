/*
 * Copyright 2021 IBM Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference
// Implementation,
// v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2017.05.17 at 12:19:00 PM EDT
//

package com.ibm.streams.spl.model;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * Java class for expressionTreeType complex type.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>
 * &lt;complexType name="expressionTreeType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice>
 *         &lt;element name="attribute" type="{http://www.ibm.com/xmlns/prod/streams/spl/operator/instance}attributeType"/>
 *         &lt;element name="binary" type="{http://www.ibm.com/xmlns/prod/streams/spl/operator/instance}binaryType"/>
 *         &lt;element name="call" type="{http://www.ibm.com/xmlns/prod/streams/spl/operator/instance}callType"/>
 *         &lt;element name="cast" type="{http://www.ibm.com/xmlns/prod/streams/spl/operator/instance}expressionTreeType"/>
 *         &lt;element name="conditional" type="{http://www.ibm.com/xmlns/prod/streams/spl/operator/instance}conditionalType"/>
 *         &lt;element name="enum" type="{http://www.ibm.com/xmlns/prod/streams/spl/operator/instance}enumType"/>
 *         &lt;element name="literal" type="{http://www.ibm.com/xmlns/prod/streams/spl/operator/instance}literalType"/>
 *         &lt;element name="postfix" type="{http://www.ibm.com/xmlns/prod/streams/spl/operator/instance}unaryType"/>
 *         &lt;element name="prefix" type="{http://www.ibm.com/xmlns/prod/streams/spl/operator/instance}unaryType"/>
 *         &lt;element name="streamHistory" type="{http://www.ibm.com/xmlns/prod/streams/spl/operator/instance}streamHistoryType"/>
 *         &lt;element name="stream" type="{http://www.ibm.com/xmlns/prod/streams/spl/operator/instance}streamType"/>
 *         &lt;element name="subscript" type="{http://www.ibm.com/xmlns/prod/streams/spl/operator/instance}subscriptType"/>
 *         &lt;element name="symbol" type="{http://www.ibm.com/xmlns/prod/streams/spl/operator/instance}symbolType"/>
 *         &lt;element name="unary" type="{http://www.ibm.com/xmlns/prod/streams/spl/operator/instance}unaryType"/>
 *       &lt;/choice>
 *       &lt;attribute name="type" type="{http://www.w3.org/2001/XMLSchema}long" />
 *       &lt;attribute name="cppCode" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(
    name = "expressionTreeType",
    propOrder = {
      "attribute",
      "binary",
      "call",
      "cast",
      "conditional",
      "_enum",
      "literal",
      "postfix",
      "prefix",
      "streamHistory",
      "stream",
      "subscript",
      "symbol",
      "unary"
    })
public class ExpressionTreeType {

  protected AttributeType attribute;
  protected BinaryType binary;
  protected CallType call;
  protected ExpressionTreeType cast;
  protected ConditionalType conditional;

  @XmlElement(name = "enum")
  protected EnumType _enum;

  protected LiteralType literal;
  protected UnaryType postfix;
  protected UnaryType prefix;
  protected StreamHistoryType streamHistory;
  protected StreamType stream;
  protected SubscriptType subscript;
  protected SymbolType symbol;
  protected UnaryType unary;

  @XmlAttribute(name = "type")
  protected Long type;

  @XmlAttribute(name = "cppCode")
  protected String cppCode;

  /**
   * Gets the value of the attribute property.
   *
   * @return possible object is {@link AttributeType }
   */
  public AttributeType getAttribute() {
    return attribute;
  }

  /**
   * Sets the value of the attribute property.
   *
   * @param value allowed object is {@link AttributeType }
   */
  public void setAttribute(AttributeType value) {
    this.attribute = value;
  }

  /**
   * Gets the value of the binary property.
   *
   * @return possible object is {@link BinaryType }
   */
  public BinaryType getBinary() {
    return binary;
  }

  /**
   * Sets the value of the binary property.
   *
   * @param value allowed object is {@link BinaryType }
   */
  public void setBinary(BinaryType value) {
    this.binary = value;
  }

  /**
   * Gets the value of the call property.
   *
   * @return possible object is {@link CallType }
   */
  public CallType getCall() {
    return call;
  }

  /**
   * Sets the value of the call property.
   *
   * @param value allowed object is {@link CallType }
   */
  public void setCall(CallType value) {
    this.call = value;
  }

  /**
   * Gets the value of the cast property.
   *
   * @return possible object is {@link ExpressionTreeType }
   */
  public ExpressionTreeType getCast() {
    return cast;
  }

  /**
   * Sets the value of the cast property.
   *
   * @param value allowed object is {@link ExpressionTreeType }
   */
  public void setCast(ExpressionTreeType value) {
    this.cast = value;
  }

  /**
   * Gets the value of the conditional property.
   *
   * @return possible object is {@link ConditionalType }
   */
  public ConditionalType getConditional() {
    return conditional;
  }

  /**
   * Sets the value of the conditional property.
   *
   * @param value allowed object is {@link ConditionalType }
   */
  public void setConditional(ConditionalType value) {
    this.conditional = value;
  }

  /**
   * Gets the value of the enum property.
   *
   * @return possible object is {@link EnumType }
   */
  public EnumType getEnum() {
    return _enum;
  }

  /**
   * Sets the value of the enum property.
   *
   * @param value allowed object is {@link EnumType }
   */
  public void setEnum(EnumType value) {
    this._enum = value;
  }

  /**
   * Gets the value of the literal property.
   *
   * @return possible object is {@link LiteralType }
   */
  public LiteralType getLiteral() {
    return literal;
  }

  /**
   * Sets the value of the literal property.
   *
   * @param value allowed object is {@link LiteralType }
   */
  public void setLiteral(LiteralType value) {
    this.literal = value;
  }

  /**
   * Gets the value of the postfix property.
   *
   * @return possible object is {@link UnaryType }
   */
  public UnaryType getPostfix() {
    return postfix;
  }

  /**
   * Sets the value of the postfix property.
   *
   * @param value allowed object is {@link UnaryType }
   */
  public void setPostfix(UnaryType value) {
    this.postfix = value;
  }

  /**
   * Gets the value of the prefix property.
   *
   * @return possible object is {@link UnaryType }
   */
  public UnaryType getPrefix() {
    return prefix;
  }

  /**
   * Sets the value of the prefix property.
   *
   * @param value allowed object is {@link UnaryType }
   */
  public void setPrefix(UnaryType value) {
    this.prefix = value;
  }

  /**
   * Gets the value of the streamHistory property.
   *
   * @return possible object is {@link StreamHistoryType }
   */
  public StreamHistoryType getStreamHistory() {
    return streamHistory;
  }

  /**
   * Sets the value of the streamHistory property.
   *
   * @param value allowed object is {@link StreamHistoryType }
   */
  public void setStreamHistory(StreamHistoryType value) {
    this.streamHistory = value;
  }

  /**
   * Gets the value of the stream property.
   *
   * @return possible object is {@link StreamType }
   */
  public StreamType getStream() {
    return stream;
  }

  /**
   * Sets the value of the stream property.
   *
   * @param value allowed object is {@link StreamType }
   */
  public void setStream(StreamType value) {
    this.stream = value;
  }

  /**
   * Gets the value of the subscript property.
   *
   * @return possible object is {@link SubscriptType }
   */
  public SubscriptType getSubscript() {
    return subscript;
  }

  /**
   * Sets the value of the subscript property.
   *
   * @param value allowed object is {@link SubscriptType }
   */
  public void setSubscript(SubscriptType value) {
    this.subscript = value;
  }

  /**
   * Gets the value of the symbol property.
   *
   * @return possible object is {@link SymbolType }
   */
  public SymbolType getSymbol() {
    return symbol;
  }

  /**
   * Sets the value of the symbol property.
   *
   * @param value allowed object is {@link SymbolType }
   */
  public void setSymbol(SymbolType value) {
    this.symbol = value;
  }

  /**
   * Gets the value of the unary property.
   *
   * @return possible object is {@link UnaryType }
   */
  public UnaryType getUnary() {
    return unary;
  }

  /**
   * Sets the value of the unary property.
   *
   * @param value allowed object is {@link UnaryType }
   */
  public void setUnary(UnaryType value) {
    this.unary = value;
  }

  /**
   * Gets the value of the type property.
   *
   * @return possible object is {@link Long }
   */
  public Long getType() {
    return type;
  }

  /**
   * Sets the value of the type property.
   *
   * @param value allowed object is {@link Long }
   */
  public void setType(Long value) {
    this.type = value;
  }

  /**
   * Gets the value of the cppCode property.
   *
   * @return possible object is {@link String }
   */
  public String getCppCode() {
    return cppCode;
  }

  /**
   * Sets the value of the cppCode property.
   *
   * @param value allowed object is {@link String }
   */
  public void setCppCode(String value) {
    this.cppCode = value;
  }
}
