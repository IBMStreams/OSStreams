/*
 * Copyright 2021 IBM Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

<%
    use SplitCommon;
    SplitCommon::verify($model);
    my $key = $model->getParameterByName("key");
    my $keyType = $key ? $key->getValueAt(0)->getCppType() : "int64_t";
    my $ckptKind = $model->getContext()->getCheckpointingKind();
%>
<%SPL::CodeGen::headerPrologue($model);%>

class MY_OPERATOR : public MY_BASE_OPERATOR<%if ($ckptKind ne "none") {%>, public StateHandler<%}%>
{
public:
    MY_OPERATOR();

    virtual void process(Tuple const & tuple, uint32_t port);
    virtual void process(Punctuation const & punct, uint32_t port);
<%if ($key) {%>
private:
    typedef std::tr1::unordered_map<<%=$keyType%>, std::vector<int64_t> > MapType;
    MapType _Map;
    std::vector<int64_t> _Default;
    bool _hasDefault;
    std::string _fileName;
<%}%>
};

<%SPL::CodeGen::headerEpilogue($model);%>
