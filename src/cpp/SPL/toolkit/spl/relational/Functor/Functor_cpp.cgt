/*
 * Copyright 2021 IBM Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

<%SPL::CodeGen::implementationPrologue($model);%>

<%
   my $inputPort = $model->getInputPortAt(0);
   my $numOutputPorts = $model->getNumberOfOutputPorts();
   my $outputPort0 = $model->getOutputPortAt(0);
   my $inTupleName = $inputPort->getCppTupleName();
   my $filterParam = $model->getParameterByName("filter");
   my $filterExpr = $filterParam ?  $filterParam->getValueAt(0)->getCppExpression() : "1";
%>

void MY_OPERATOR::process(Tuple const & tuple, uint32_t port)
{
   IPort0Type const & <%=$inTupleName%> = static_cast<IPort0Type const&>(tuple);
   if (! (<%=$filterExpr%>) )
       return;
   { <%SPL::CodeGen::emitSubmitOutputTuple($outputPort0, $inputPort);%> }
   <%if ($numOutputPorts > 1) {
       for (my $i = 1; $i < $numOutputPorts; ++$i) {
           my $outputPort = $model->getOutputPortAt($i);%>
           { <%SPL::CodeGen::emitSubmitOutputTuple($outputPort, $inputPort);%> }
       <%}
   }%>
}

void MY_OPERATOR::process(Punctuation const & punct, uint32_t port)
{
   forwardWindowPunctuation(punct);
}

<%SPL::CodeGen::implementationEpilogue($model);%>
