/*
 * Copyright 2021 IBM Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

            <%if ($hasDelayField) {%>
                <%=$readFrom%> >> delay;
                getPE().blockUntilShutdownRequest(delay);
            <%}%>
            <%if ($readPunctuations) {%>
                {
                    char type;
                    <%=$readFrom%> >> type;
                    switch (type) {
                        case 0: break;
                        case 1: _tupleNumber--; submit (Punctuation::WindowMarker, 0); continue;
                        case 2: _tupleNumber--; submit (Punctuation::FinalMarker, 0); _sawFinal = true; continue;
                        default:
                            char buffer[10];
                            sprintf (buffer, "0x%02x", type);
                            _tupleNumber--;
                            SPLTRACEMSG(L_ERROR, SPL_APPLICATION_RUNTIME_SOURCE_UKNOWN_BINARY_TYPE(buffer), SPL_OPER_DBG);
                            continue;
                    }

                }
            <%}
            if ($hasAssignments) {
                for (my $i = 0; $i < $numAttrs; ++$i) {
                    my $attr = $genAttrs[$i];
                    my $attrName = $attr->getName();%>
                    <%=$readFrom%> >> tuple$.get_<%=$attrName%>();
                <%}
            } else {%>
                <%=$readFrom%> >> tuple$;
            <%}%>
