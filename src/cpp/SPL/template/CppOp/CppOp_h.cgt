/*
 * Copyright 2021 IBM Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* Additional includes go here */

#pragma SPL_NON_GENERIC_OPERATOR_HEADER_PROLOGUE

class MY_OPERATOR : public MY_BASE_OPERATOR
{
public:
  // Constructor
  MY_OPERATOR();

  // Destructor
  virtual ~MY_OPERATOR();

  // Notify port readiness
  void allPortsReady();

  // Notify termination
  void prepareToShutdown();

  // Processing for source and threaded operators
  void process(uint32_t idx);

  // Tuple processing for mutating ports
  void process(Tuple & tuple, uint32_t port);

  // Tuple processing for non-mutating ports
  void process(Tuple const & tuple, uint32_t port);

  // Punctuation processing
  void process(Punctuation const & punct, uint32_t port);

private:
  // Members
};

#pragma SPL_NON_GENERIC_OPERATOR_HEADER_EPILOGUE
